/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.util.ArrayList;

/**
 *
 * @author yuanc
 */
public class managerViewBidsPg extends javax.swing.JFrame {

    /**
     * Creates new form managerViewBidsPg
     */
    private String date;
    private String id;
    private String role;
    public managerViewBidsPg() {
        initComponents();
        setTitle("Manager Bid View");
        displayTextArea.setEditable(false);
    }
    public void getValues()
    {
        String um = bidComboBox.getSelectedItem().toString();
        String date1 = um.split(": ")[1];
        date = date1.split(" ")[0];
        String role1 = um.split(": ")[2];
        role = role1.split(" ")[0];
        id = um.split(": ")[3];
        System.out.println(date + " " + role + " " + id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        displayTextArea = new javax.swing.JTextArea();
        bidComboBox = new javax.swing.JComboBox<>();
        approveButton = new javax.swing.JButton();
        rejectButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();
        viewAllBidButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        displayTextArea.setColumns(20);
        displayTextArea.setRows(5);
        jScrollPane1.setViewportView(displayTextArea);

        bidComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Bids Awaiting Approval" }));
        bidComboBox.setToolTipText("");
        bidComboBox.setDoubleBuffered(true);

        approveButton.setText("Approve");
        approveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveButtonActionPerformed(evt);
            }
        });

        rejectButton.setText("Reject");
        rejectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectButtonActionPerformed(evt);
            }
        });

        viewAllBidButton.setText("View All");
        viewAllBidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllBidButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(approveButton)
                        .addGap(78, 78, 78)
                        .addComponent(rejectButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bidComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(viewAllBidButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewAllBidButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bidComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveButton)
                    .addComponent(rejectButton))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void approveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveButtonActionPerformed
        // TODO add your handling code here:
        messageLabel.setText("Bid: " + bidComboBox.getSelectedItem() + " has been approved.");
        getValues();
        updateBidsC ubc = new updateBidsC();
        boolean isUpdated = ubc.updateBids(date, role, Integer.parseInt(id), 1);
        if (isUpdated)
        {
            messageLabel.setText("Bid: " + bidComboBox.getSelectedItem() + " has been approved.");
        }
        else
        {
            messageLabel.setText("Error Updating");
        }
    }//GEN-LAST:event_approveButtonActionPerformed

    private void rejectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectButtonActionPerformed
        // TODO add your handling code here:
        getValues();
        updateBidsC ubc = new updateBidsC();
        boolean isUpdated = ubc.updateBids(date, role, Integer.parseInt(id), 2);
        if (isUpdated)
        {
            messageLabel.setText("Bid: " + bidComboBox.getSelectedItem() + " has been rejected.");
        }
        else
        {
            messageLabel.setText("Error Updating");
        }
    }//GEN-LAST:event_rejectButtonActionPerformed

    private void viewAllBidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllBidButtonActionPerformed
        // TODO add your handling code here:
        //displayTextArea.setText("Displaying all bids...");
        bidComboBox.removeAllItems();
        displayTextArea.setText("");
        viewBidsC vbC = new viewBidsC();
        ArrayList<String> bidsList = vbC.viewBids();
        for (int i=0; i<bidsList.size(); i++) {
            displayTextArea.append(bidsList.get(i) + "\n");
            bidComboBox.addItem(bidsList.get(i));
            //    System.out.println(accounts.get(i));
        }
    }//GEN-LAST:event_viewAllBidButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(managerViewBidsPg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(managerViewBidsPg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(managerViewBidsPg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(managerViewBidsPg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new managerViewBidsPg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveButton;
    private javax.swing.JComboBox<String> bidComboBox;
    private javax.swing.JTextArea displayTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JButton rejectButton;
    private javax.swing.JButton viewAllBidButton;
    // End of variables declaration//GEN-END:variables
}
